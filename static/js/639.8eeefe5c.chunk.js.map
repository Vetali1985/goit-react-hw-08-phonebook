{"version":3,"file":"static/js/639.8eeefe5c.chunk.js","mappings":"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","sources":["components/Shared/Section.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  padding: 16px 0px;\n  \n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    return contacts\n      .filter(contact => {\n        const normalizedFilter = filterValue.toLowerCase();\n        return contact.name.toLowerCase().includes(normalizedFilter);\n      })\n      .sort((f, s) => f.name.localeCompare(s.name));\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  padding: 10px;\n  border: black solid 2px;\n  border-radius: 4px;\n  \n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 6px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 4px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #fff;\n    background-color: #0eedc4f2;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  width: 100px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #fff;\n    background-color: red;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  Button,\n  ButtonClose,\n  Buttons,\n  Form,\n  Input,\n  Label,\n  Span,\n} from './ContactForm.styled';\n\nexport const ContactForm = ({ onClose }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleСhange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const checkingName = contacts.find(item => {\n      return item.name === name;\n    });\n\n    if (checkingName) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    const checkingContact = contacts.reduce(\n      (acc, item) => {\n        if (item.number === number) {\n          acc.checkingName = item.name;\n          acc.status = true;\n        }\n        return acc;\n      },\n      { status: false, checkingName: '' }\n    );\n\n    if (checkingContact.status) {\n      return alert(\n        `Number ${number} is already in contacts \\nwith name ${checkingContact.checkingName}`\n      );\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n    onClose();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleСhange}\n        />\n      </Label>\n      <Label>\n        <Span>Number</Span>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleСhange}\n        />\n      </Label>\n      <Buttons>\n        <Button type=\"submit\">Save contact</Button>\n        <ButtonClose type=\"button\" onClick={onClose}>\n          Cancel\n        </ButtonClose>\n      </Buttons>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  width: 160px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport { setFilterValue } from 'redux/contacts/slices/filterSlice';\n\nimport { Input, Label, Span } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    dispatch(setFilterValue(evt.target.value));\n  };\n\n  return (\n    <Label>\n      <Span>Find contacts by name</Span>\n      <Input type=\"text\" value={filter} onChange={handleFilter} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalContent = styled.div`\n  \n  min-height: 350px;\n  max-width: 300px;\n  width: 100%;\n  padding: 12px;\n  background-color: darkgray;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { ModalBackdrop, ModalContent } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  });\n\n  const handleKeyDown = evt => {\n    if (evt.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = evt => {\n    if (evt.target === evt.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <ModalBackdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </ModalBackdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  padding: 10px;\n  border: black solid 2px;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 6px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 4px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #fff;\n    background-color: #0eedc4f2;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  width: 100px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #fff;\n    background-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\n\nimport {\n  Button,\n  ButtonClose,\n  Buttons,\n  Form,\n  Input,\n  Label,\n  Span,\n} from './EditForm.styled';\n\nexport const EditForm = ({ onClose, id, contactName, contactNumber }) => {\n  const [name, setName] = useState(contactName);\n  const [number, setNumber] = useState(contactNumber);\n\n  const dispatch = useDispatch();\n\n  const handleСhange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    dispatch(editContact({ id, name, number }));\n\n    onClose();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleСhange}\n        />\n      </Label>\n      <Label>\n        <Span>Number</Span>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleСhange}\n        />\n      </Label>\n      <Buttons>\n        <Button type=\"submit\">Save contact</Button>\n        <ButtonClose type=\"button\" onClick={onClose}>\n          Cancel\n        </ButtonClose>\n      </Buttons>\n    </Form>\n  );\n};\n\nEditForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  userNumber: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\nalign-items:center;\n  max-width: 500px;\n  border: black solid 1px;\n  border-radius: 4px;\n  padding: 6px;\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Contact = styled.p`\n  font-size: 16px;\n  padding: 0 6px 0 6px;\n`;\n\nexport const Button = styled.button`\n  background-color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n\n  :hover {\n    color: #fff;\n    background-color: red;\n  }\n\n  :not(:last-child):hover {\n    background-color: #0eedc4f2;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nimport { Button, Contact, ListItem } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  const dispatch = useDispatch();\n\n  const onDelContact = () => dispatch(deleteContact(id));\n\n  return (\n    <ListItem>\n      <Contact>\n        {name}: {number}\n      </Contact>\n      <div>\n        <Button type=\"button\" onClick={toggleModal}>\n          Edit\n        </Button>\n        <Button type=\"button\" onClick={onDelContact}>\n          Delete\n        </Button>\n      </div>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <EditForm\n            onClose={toggleModal}\n            id={id}\n            contactName={name}\n            contactNumber={number}\n          />\n        </Modal>\n      )}\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: block;\n  height: 450px;\n  overflow: auto;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\n\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(contact => (\n        <ContactItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleApp = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 26px;\n  max-width: 360px;\n  transform: translateY(20px);\n  border: solid rgb(34, 139, 34);\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 20px;\n\n  width: 100px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n\n  font-size: 14px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #fff;\n    background-color: #0eedc4f2;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Modal } from 'components/Modal/Modal';\n\nimport { Button } from 'components/App/App.styled';\nimport { Section } from 'components/Shared/Section.styled';\n\nconst Contacts = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <Section>\n        <div>\n          {/* <ContactForm /> */}\n          <Button type=\"button\" onClick={toggleModal}>\n            Add contact\n          </Button>\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <ContactForm onClose={toggleModal} />\n            </Modal>\n          )}\n          <Filter />\n          {isLoading && !error && <b>Request in progress...</b>}\n          {error && <b>Ooops, something went wrong</b>}\n          <ContactList />\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Section","styled","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectFilteredContacts","filterValue","contact","normalizedFilter","toLowerCase","includes","sort","f","s","localeCompare","Form","Label","Span","Input","Buttons","Button","ButtonClose","ContactForm","onClose","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleСhange","evt","target","autoComplete","onSubmit","preventDefault","item","alert","checkingContact","reduce","acc","checkingName","status","addContact","type","pattern","title","required","onChange","onClick","Filter","setFilterValue","ModalBackdrop","ModalContent","modalRoot","document","querySelector","Modal","children","useEffect","window","addEventListener","handleKeyDown","body","style","overflow","removeEventListener","code","createPortal","currentTarget","EditForm","id","contactName","contactNumber","editContact","ListItem","Contact","ContactItem","showModal","setShowModal","toggleModal","prevState","deleteContact","List","ContactList","filteredContacts","fetchContacts","Helmet"],"sourceRoot":""}